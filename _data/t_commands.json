{
  "commands": {
    "cmd": "commands",
    "format": "${PREFIX}commands",
    "desc": "Used to get a list of all custom commands in the server DMed to you.",
    "perms": [
      "USER"
    ],
    "moduleId": "customcommands",
    "canDM": false,
    "canEdit": false,
    "parameters": [],
    "examples": []
  },
  "help": {
    "cmd": "help",
    "synonyms": [
      "slugbot"
    ],
    "format": "${PREFIX}help [command]",
    "desc": "Use this command to get info on how to use a specific command. Use the command with no arguments to get a link to this documentation.",
    "perms": [
      "USER"
    ],
    "canDM": true,
    "canEdit": false,
    "debug": false,
    "parameters": [
      {
        "param": "[command]",
        "values": [
          {
            "value": "command",
            "desc": "name of command to display information on"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!help giveme",
        "desc": "This will display documentation on the `giveme` command."
      }
    ]
  },
  "math": {
    "cmd": "math",
    "synonyms": [
      "maths"
    ],
    "format": "${PREFIX}math <expression>",
    "desc": "Use this command to calculate the value of a mathematical expression",
    "perms": [
      "USER"
    ],
    "parameters": [
      {
        "param": "<expression>",
        "values": [
          {
            "value": "mathematical expression",
            "desc": "A resolvable mathematical expression"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!math 84^2 / pi",
        "desc": "This will get a response with the value of the expression."
      }
    ]
  },
  "roll": {
    "cmd": "roll",
    "format": "${PREFIX}roll [avg] <dice count>D<dice type> [modifier]",
    "desc": "Use this command to get SlugBot to roll dice. Including the `avg` flag will return a readout displaying statistical information on the roll instead.",
    "perms": [
      "USER"
    ],
    "moduleId": "roll",
    "canDM": false,
    "canEdit": false,
    "debug": false,
    "parameters": [
      {
        "param": "[avg]",
        "values": [
          {
            "value": "avg",
            "desc": "Specify that statistical information should be displayed instead"
          }
        ]
      },
      {
        "param": "<dice count>",
        "values": [
          {
            "value": "Integer number",
            "desc": "Corresponding to the number of dice to roll"
          }
        ]
      },
      {
        "param": "<dice type>",
        "values": [
          {
            "value": "Integer number",
            "desc": "Corresponding to the type of dice to roll"
          }
        ]
      },
      {
        "param": "[modifier]",
        "values": [
          {
            "value": "Integer number",
            "desc": "Corresponding to a value to add or subtract from the total roll"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!roll 4d6 - 2",
        "desc": "This will roll four D6s, subtract 2, then display the outcome."
      },
      {
        "command": "!roll avg 4d6",
        "desc": "This will display the statistics of rolling four D6s."
      }
    ]
  },
  "slugballs": {
    "cmd": "slugballs",
    "format": "${PREFIX}slugballs <question>",
    "desc": "Use this command to ask SlugBot a question, like a magic eight ball - only more rude.",
    "perms": [
      "USER"
    ],
    "moduleId": "slugballs",
    "canDM": true,
    "canEdit": true,
    "debug": false,
    "parameters": [
      {
        "param": "<question>",
        "values": [
          {
            "value": "String",
            "desc": "The question you wish to ask SlugBot"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!slugballs Should I play dark souls?",
        "desc": "This will make SlugBot respond with an answer to the question."
      }
    ]
  },
  "igot": {
    "format": "${PREFIX}igot [ds1|ds3] <souls received>",
    "desc": "Use this command to get a readout containing the estimated level of another player killed in Dark Souls 1 or Dark Souls 3.",
    "perms": [
      "USER"
    ],
    "moduleId": "igot",
    "canDM": true,
    "canEdit": true,
    "debug": false,
    "parameters": [
      {
        "param": "[ds1|ds3]",
        "values": [
          {
            "value": "ds1",
            "desc": "specify to calculate the soul level of a Dark Souls 1 player."
          },
          {
            "value": "ds3",
            "desc": "specify to calculate the soul level of a Dark Souls 3 player."
          }
        ]
      },
      {
        "param": "<souls received>",
        "values": [
          {
            "value": "Integer number",
            "desc": "Corresponding to the number of souls you received when killing another player."
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!igot 1919",
        "desc": "This show the possible soul level of a player depending on their phantom type.\n![igot-screenshot](images/igot_demo.png)"
      }
    ]
  },
  "weapon": {
    "cmd": "weapon",
    "format": "${PREFIX}weapon [weapon name [vs ...]] [upgrade level] [str [dex [int [faith [luck]]]]]",
    "desc": "Use this command to calculate the AR of any DS3 weapon, along with the expected damage on R1s/L1s, backstabs and ripostes.",
    "help": "[Documentation](https://slugbot.github.io/web/docs_discord.html#weapon)",
    "perms": [
      "USER"
    ],
    "moduleId": "darksouls",
    "canDM": true,
    "canEdit": true,
    "debug": true,
    "parameters": [
      {
        "param": "[weapon name]",
        "values": [
          {
            "value": "Dark Souls 3 weapon name",
            "desc": "Should include infusion type if desired. Spelling is lenient."
          },
          {
            "value": "null",
            "desc": "If no weapon name is given, info on all weapons will be given."
          }
        ]
      },
      {
        "param": "[upgrade level]",
        "values": [
          {
            "value": "Weapon upgrade level",
            "desc": "For special weapons, UPGRADE LEVELS SHOULD BE CONVERTED TO STANDARD UPGRADE LEVEL EQUIVALENTS so weapons can be compared. In the format of '+2'"
          },
          {
            "value": "null",
            "desc": "If no upgrade level is given, the upgrade level of your set build will be used."
          }
        ]
      },
      {
        "param": "[str [dex [int [faith [luck]]]]]",
        "values": [
          {
            "value": "Stat levels",
            "desc": "List of stat levels given in order and separated by spaces or '/'s"
          },
          {
            "value": "null",
            "desc": "If no stat level is given, the corresponding stat level of your set build will be used."
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!weapon sharp claymore +7 16 35 10 10 10",
        "desc": "The 1-hand/2-hand and weapon self-buff states can be toggled via appropriate reactions on the printout. The normal upgrade path input is used for special weapons; `!weapon black knight sword +10 20 18 10 10 10` will print out the data for a black knight sword at an upgrade level of +5.\n\nIn the case of an incomplete input, like `!weapon caestus`, the missing upgrade and stat data will be collected from the build you currently have set through the `!setbuild` command.\n\nThis command can also be used to compare up to four different weapons of a given upgrade level and stat combination. This is done by listing multiple weapons as the `[weapon name and infusion]` argument, separated by \"vs\"."
      },
      {
        "command": "!weapon fire dagger vs chaos dagger +3 10 10 10 10 10",
        "desc": "Note that the upgrade and stats need to be specified only once, and at the end.\n\nTyping out the command without a `[weapon name and infusion]` argument will make SlugBot calculate the overall ten best weapons based on expected R1 damage for the upgrade level and stats provided. The printout for this kind of input will include reactions to toggle between various weapon classes, along with the usual 1-hand/2-hand and self-buff options. SlugBot will also note if any of the weapons are usable only when 2-handed."
      }
    ]
  },
  "debug": {
    "perms": [
      "BOTOWNER"
    ],
    "reqs": [],
    "debug": true,
    "format": "${PREFIX}debug <args>",
    "help": ""
  },
  "addquote": {
    "cmd": "addquote",
    "format": "${PREFIX}addquote <quote>",
    "desc": "Adds quote to quote list to be randomly selected by [!quote](#quote).",
    "perms": [
      "MODERATOR"
    ],
    "moduleId": "quotes",
    "canDM": false,
    "canEdit": false,
    "debug": false,
    "parameters": [
      {
        "param": "<quote>",
        "values": [
          {
            "value": "String"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!addquote Potion seller. Enough of these games.",
        "desc": "This will add the quote to the streamer's list of quotes."
      }
    ]
  },
  "quote": {
    "cmd": "quote",
    "format": "${PREFIX}quote [list]",
    "desc": "Use this command to pull a random quote from the streamer's list of quotes. add quotes to the list using [!addquote](#addquote).\n\nIncluding the 'list' parameter will display all quotes with their corresponding quote number. This can only be done by moderators.",
    "perms": [
      "USER"
    ],
    "moduleId": "quotes",
    "canDM": false,
    "canEdit": false,
    "debug": false,
    "parameters": [
      {
        "param": "[list]",
        "values": [
          {
            "value": "list",
            "desc": "Optional parameter used by moderators to display a list of all quotes with their quote numbers."
          }
        ]
      }
    ]
  },
  "removequote": {
    "cmd": "removequote",
    "format": "${PREFIX}removequote <quote number>",
    "desc": "Use this command to remove a quote by referencing its quote number. Quote numbers can be viewed using [!quote list](#quote)",
    "perms": [
      "MODERATOR"
    ],
    "moduleId": "quotes",
    "canDM": false,
    "canEdit": false,
    "debug": false,
    "parameters": [
      {
        "param": "<quote number>",
        "values": [
          {
            "value": "Number",
            "desc": "The quote number - displayed in the quote list."
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!removequote 1",
        "desc": "This will remove quote with quote number '1' from the list."
      }
    ]
  },
  "reminder": {
    "cmd": "reminder",
    "perms": [
      "ADMINISTRATOR",
      "TWITCH_MOD"
    ],
    "moduleId": "reminders",
    "debug": true,
    "canEdit": false,
    "canDM": false,
    "format": "${PREFIX}reminder <add [interval period] <message> | remove <reminderId>| list>",
    "desc": "Use this command to add/remove/list periodic reminders in twitch chat.",
    "parameters": [
      {
        "param": "add|remove|list",
        "values": [
          {
            "value": "add",
            "desc": "Specify that a reminder is being added."
          },
          {
            "value": "remove",
            "desc": "Specify that a reminder is being removed. must be followed by a reminder ID."
          },
          {
            "value": "list",
            "desc": "Get a list of all reminders."
          }
        ]
      },
      {
        "param": "[interval period]",
        "values": [
          {
            "value": "Number",
            "desc": "Number of minutes between the reminder message being sent in chat."
          }
        ]
      },
      {
        "param": "<reminderId>",
        "values": [
          {
            "value": "ID number",
            "desc": "The unique number given to each reminder. Can be viwed in the reminder list."
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!reminder add 20 remember to follow to get notified when I go live!",
        "desc": "This will create a reminder that will be sent in chat every 20 minutes."
      },
      {
        "command": "!reminder remove 1",
        "desc": "This will remove the reminder with ID 1"
      },
      {
        "command": "!reminder list",
        "desc": "This will list all reminders along with their IDs."
      }
    ]
  },
  "activate": {
    "cmd": "activate",
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "",
    "debug": false,
    "format": "${PREFIX}activate slugbot",
    "desc": "Use this command to activate slugbot in the twitch chat the command was used in. **SlugBot must first be summoned to the twitch chat using the `!twitch <twitch name>` command IN A DISCORD SERVER WITH SLUGBOT PRESENT**."
  },
  "addcommand": {
    "cmd": "addcommand",
    "format": "${PREFIX}addcommand <command> <response>",
    "desc": "Used to add/edit a custom command that will respond with a specified string. alternatively regex can be used in place of a command to make SlugBot send a response message whenever the regex matches a members message.\n\nThe response can contain certain replacer flags that will be replaced will specific values when sent by slugbot.\n\nLINK TO REPLACER FLAGS SECTION",
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "customcommands",
    "canDM": false,
    "canEdit": false,
    "parameters": [
      {
        "param": "<command>",
        "values": [
          {
            "value": "New command string"
          },
          {
            "value": "Existing command string",
            "desc": "Will overwrite its response"
          },
          {
            "value": "Regex keyword",
            "desc": "indicated by a string starting and ending with `/`"
          }
        ]
      },
      {
        "param": "<response>",
        "values": [
          {
            "value": "String",
            "desc": "will be displayed when the custom command is used or the regex is matched"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!addcommand flip You flipped a coin and got ${rand:heads|tails}!",
        "desc": "This will add a command that will respond with `You flipped a coin and got heads!` OR `You flipped a coin and got tails!` when the command `!flip` is used."
      },
      {
        "command": "!addcommand /don't\\s@\\sme/ <@${id}>",
        "desc": "This will create a regex keyword match that will respond with a discord mention whenever a message contains the string `don't @ me`."
      }
    ]
  },
  "cooldown": {
    "cmd": "cooldown",
    "perms": [
      "TWITCH_MOD"
    ],
    "debug": true,
    "canEdit": false,
    "canDM": false,
    "format": "${PREFIX}cooldown [set <seconds>]",
    "desc": "Use this command to set a cooldown period where slugbot will not respond to custom commands after one is used."
  },
  "deactivate": {
    "cmd": "deactivate",
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "",
    "debug": false,
    "format": "${PREFIX}deactivate slugbot",
    "desc": "Use this command to deactivate slugbot in the twitch chat the command was used in."
  },
  "maldron": {
    "perms": [
      "TWITCH_MOD"
    ],
    "reqs": [],
    "debug": false,
    "format": "${PREFIX}maldron <viewer> <number>",
    "desc": "Sneaky_Maldron's command for SaintRiots chat."
  },
  "permissions": {
    "perms": [
      "TWITCH_MOD"
    ],
    "debug": true,
    "format": "${PREFIX}permissions module|command <command name> [(user|subscriber|moderator|broadcaster) | (enable|disable)]",
    "desc": "Use this command to add or remove constraints on command usage.\n\nAdding a channel constraint will mean the specified command can only be used in that channel.\n\nAdding a role constraint will mean the specified command can only be used by members with that role.\n**ADDING ROLE CONSTRAINTS WILL OVERRIDE DEFAULT PERMISSION REQUIREMENTS**."
  },
  "removecommand": {
    "cmd": "removecommand",
    "format": "${PREFIX}removecommand <command>",
    "desc": "Used to remove an existing custom command.",
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "customcommands",
    "canDM": false,
    "canEdit": false,
    "parameters": [
      {
        "param": "<command>",
        "values": [
          {
            "value": "Existing command",
            "desc": "Must match existing command exactly"
          },
          {
            "value": "Existing regex keyword to remove",
            "desc": "Must match existing command exactly"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!removecommand ping",
        "desc": "This will remove the custom command `!ping`."
      }
    ]
  },
  "so": {
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "so",
    "debug": true,
    "format": "${PREFIX}so <streamer>",
    "desc": "Shoutouts a streamer and links to their channel.",
    "param": "<streamer>",
    "values": [
      {
        "value": "slugbot command",
        "desc": "The command you wish to set permission constraints for."
      }
    ],
    "examples": [
      {
        "command": "!so king_necrow",
        "desc": "This will shoutout the streamer King_Necrow and link to their channel."
      }
    ]
  },
  "uptime": {
    "cmd": "uptime",
    "perms": [
      "USER"
    ],
    "moduleId": "",
    "debug": false,
    "format": "${PREFIX}uptime",
    "desc": "Use this command to get a response stating the amount of time the stream has been live for."
  },
  "addbuild": {
    "cmd": "addbuild",
    "format": "${PREFIX}addbuild [build name] [soul level] [upgrade level] <link>",
    "desc": "Used to add a build to your build list. Stating `soul level`, `upgrade level` and `build planner link` are optional but recommended. If a soulsplanner link is suplied, any missing data will be taken from the build directly - often, all thats needed.",
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "builds",
    "canDM": true,
    "canEdit": false,
    "parameters": [
      {
        "param": "[build name]",
        "values": [
          {
            "value": "Name of build",
            "desc": "Unique identifier for build."
          }
        ]
      },
      {
        "param": "[soul level]",
        "values": [
          {
            "value": "Soul level",
            "desc": "Soul level of a Dark Souls build."
          },
          {
            "value": "Blood level",
            "desc": "Blood level of a Bloodborne build."
          }
        ]
      },
      {
        "param": "[Upgrade level]",
        "values": [
          {
            "value": "Upgrade level",
            "desc": "Weapon upgrade level of build."
          }
        ]
      },
      {
        "param": "<link>",
        "values": [
          {
            "value": "DS1 SoulsPlanner link"
          },
          {
            "value": "DS2 SoulsPlanner link"
          },
          {
            "value": "DS3 SoulsPlanner link",
            "desc": "All optional parameters will be filled in with the data from build planner link."
          },
          {
            "value": "Bloodborne SoulsPlanner link"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!addbuild Vilhelm's Squire SL60 +7 https://soulsplanner.com/darksouls3/1381",
        "desc": "This will add a build by the name of 'Vilhelm's Squire' to the build list. If a build by the same name already exists in the list, its information will be updated with the new information stated."
      },
      {
        "command": "!addbuild https://soulsplanner.com/darksouls3/1139",
        "desc": "This will take the name, soul level, and upgrade level directly from the build linked."
      }
    ]
  },
  "bl": {
    "perms": [
      "USER"
    ],
    "moduleId": "builds",
    "debug": false,
    "format": "${PREFIX}bl",
    "desc": "Use this command to get the name, blood level, and upgrade level of streamer's current Bloodborne build. A build must be in the streamer's build list and set as their current build using [!addbuild](#addbuild) and [!setbuild](#setbuild) for this command to work."
  },
  "build": {
    "cmd": "build",
    "format": "${PREFIX}build [list]",
    "desc": "Use this command to get info on the streamer's currently set build. Use the [!setbuild](#setbuild) command to change the current set build.",
    "perms": [
      "USER"
    ],
    "moduleId": "builds",
    "canDM": false,
    "canEdit": false,
    "parameters": [
      {
        "param": "[list]",
        "values": [
          {
            "value": "list",
            "desc": "Optional parameter to get SlugBot to DM you a full list of the streamer's builds."
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!build",
        "desc": "This will display info on the streamer's currently set build."
      },
      {
        "command": "!build list",
        "desc": "This will make SlugBot DM you with a list of all of the streamer's builds."
      }
    ]
  },
  "iam": {
    "cmd": "iam",
    "perms": [
      "TWITCH_MOD"
    ],
    "debug": true,
    "format": "${PREFIX}iam <member event info>",
    "desc": "Use this command to create a notification for a Member Event (such as a *dry finger run*).\n\nProvide at least a location and what you are doing there. **Passwords and character names must be in quotes.** If you have multiple platform roles, remember to state which one the event will be on. How you word it doesn't matter too much. You can add extra event information by including `info: \"<extra info here>\"` when using the command.\n\nUse `${PREFIX}iam done` command to end the event.",
    "examples": [
      {
        "command": "!iam dry fingered in the archives. soul level 81 +10. character name \"The Balnace\", password: \"slug\"",
        "desc": "This will create a member Event notification in all member event channels, stating where you are, what you are doing, your soul level, upgrade level, character name, and password. You can update the information in the member event without having to re-enter everything again. Simply use the command again and specify your updates."
      },
      {
        "command": "!iam now SL90 at the ringed city streets.",
        "desc": "This will update the soul level and location, leaving everything else unchanged."
      },
      {
        "command": "!am done",
        "desc": "This will end the event."
      }
    ]
  },
  "removebuild": {
    "cmd": "removebuild",
    "format": "${PREFIX}removebuild <build id>",
    "desc": "Used to remove a build from a your build list.",
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "builds",
    "canDM": true,
    "canEdit": false,
    "parameters": [
      {
        "param": "<build id>",
        "values": [
          {
            "value": "build name"
          },
          {
            "value": "build ID",
            "desc": "Number of a build in the build list"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!removebuild Vilhelm's Squire",
        "desc": "This will remove the build 'Vilhelm's Squire' from the build list. Build name is case insensitive."
      }
    ]
  },
  "setbuild": {
    "cmd": "setbuild",
    "format": "${PREFIX}setbuild <build name|build number>",
    "desc": "Use this command to set your current build from your list of added builds.",
    "perms": [
      "TWITCH_MOD"
    ],
    "moduleId": "builds",
    "canDM": true,
    "canEdit": true,
    "debug": false,
    "parameters": [
      {
        "param": "<build name|build number>",
        "values": [
          {
            "value": "build name",
            "desc": "Approximate name of an added build"
          },
          {
            "value": "build number",
            "desc": "Number of build in your build list"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!setbuild Knight Laran",
        "desc": "This will set your current build to Knight Laran as long as its in your build list."
      }
    ]
  },
  "sl": {
    "perms": [
      "USER"
    ],
    "moduleId": "builds",
    "debug": false,
    "format": "${PREFIX}sl",
    "desc": "Use this command to get the name, soul level, and upgrade level of streamer's current Dark Souls build. A build must be in the streamer's build list and set as their current build using [!addbuild](#addbuild) and [!setbuild](#setbuild) for this command to work."
  },
  "whowas": {
    "cmd": "whowas",
    "format": "${PREFIX}whowas <character name>",
    "desc": "Use this command to find the owner of a character you met in-game.\nSlugBot will attempt to find three builds in its database with the most similar names.",
    "perms": [
      "USER"
    ],
    "moduleId": "builds",
    "canDM": false,
    "canEdit": false,
    "debug": false,
    "parameters": [
      {
        "param": "<character name>",
        "values": [
          {
            "value": "String",
            "desc": "Approximate name of a character"
          }
        ]
      }
    ],
    "examples": [
      {
        "command": "!whowas Amil of the Deep",
        "desc": "This will show three builds from SlugBots build database that most closely match the name `Amil of the Deep`."
      }
    ]
  },
  "song": {
    "cmd": "song",
    "perms": [
      "USER"
    ],
    "moduleId": "",
    "debug": false,
    "format": "${PREFIX}song",
    "desc": "Use this command to get the streamers currently playing song."
  }
}